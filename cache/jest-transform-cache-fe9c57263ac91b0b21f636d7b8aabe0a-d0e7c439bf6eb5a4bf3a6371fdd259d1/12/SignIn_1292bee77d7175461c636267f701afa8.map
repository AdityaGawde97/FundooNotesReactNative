{"version":3,"sources":["SignIn.js"],"names":["SignIn","props","validateForm","errors","formIsValid","state","email","pattern","RegExp","test","password","setState","setTimeout","load","submitUserSignIn","navigation","navigate","visibleIcon","styles","mainContainer","appTitle","color","createTitle","flex","textAlign","fontSize","top","inputContainer","passView2","flexDirection","backgroundColor","borderColor","right","justifyContent","width","Component"],"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text } from 'react-native';\nimport { styles } from '../../Css/Authentication.style'\nimport { OutlinedTextField } from 'react-native-material-textfield'\nimport { Button, CheckBox } from 'react-native-elements';\nimport { loginUser } from '../../Firebase/AuthServices';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nexport default class SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            visibleIcon: false,\n            load: false,\n            errors: {}\n        };\n    }\n\n    validateForm = () => {\n        let errors = {};\n        let formIsValid = true;\n\n        if (typeof this.state.email !== \"undefined\") {\n            let pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n            if (!pattern.test(this.state.email)) {\n                formIsValid = false;\n                errors[\"email\"] = \"*Enter valid email-ID.\";\n            }\n        }\n\n        if (!this.state.email) {\n            errors[\"email\"] = \"*Enter email id\";\n            formIsValid = false;\n        }\n\n        if (!this.state.password) {\n            errors[\"password\"] = \"*Enter password\";\n            formIsValid = false;\n        }\n\n        this.setState({\n            errors: errors\n        })\n        setTimeout(()=>this.setState({ load: false }), 1000)\n        return formIsValid\n    }\n\n    submitUserSignIn = () => {\n        this.setState({ load: true })\n        \n        if (this.validateForm()) {\n            loginUser(this.state.email, this.state.password, () => {\n                setTimeout(()=>this.setState({ load: false }), 3000)\n                this.props.navigation.navigate('Notes')\n            }, (errors) => {\n                this.setState({\n                    errors: errors\n                })\n            })\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.mainContainer}>\n\n                <Text style={styles.appTitle}>\n                    <Text style={{ color: '#4285F4' }}>F</Text>\n                    <Text style={{ color: '#DB4437' }}>u</Text>\n                    <Text style={{ color: '#F4B400' }}>n</Text>\n                    <Text style={{ color: '#4285F4' }}>d</Text>\n                    <Text style={{ color: '#0F9D58' }}>o</Text>\n                    <Text style={{ color: '#DB4437' }}>o</Text>\n                </Text>\n\n                <Text style={styles.createTitle}>\n                    Sign in\n                </Text>\n\n                <Text\n                    style={{\n                        flex: 0,\n                        textAlign: 'center',\n                        fontSize: 17,\n                        top: '6%'\n                    }}>\n                    with your Fundoo Account\n                </Text>\n\n                <View style={styles.inputContainer}>\n\n                    <View>\n                        <OutlinedTextField\n                            testID=\"testEmail1\"\n                            label=\"Email\"\n                            value={this.state.email}\n                            onChangeText={(email) => this.setState({ email })}\n                            error={this.state.errors.email}\n                            errorColor='red'\n                        />\n                    </View>\n\n                    <View style={styles.passView2}>\n                        <OutlinedTextField\n                            testID=\"testPassword1\"\n                            label=\"Password\"\n                            value={this.state.password}\n                            onChangeText={(password) => this.setState({ password })}\n                            secureTextEntry={!this.state.visibleIcon}\n                            error={this.state.errors.password}\n                            errorColor='red'\n                        />\n                    </View>\n\n                    <View style={{\n                        flex: 0, flexDirection: 'row'\n                    }}>\n                        <CheckBox\n                            testID=\"testPassVisibility\"\n                            title=\"Show password\"\n                            checked={this.state.visibleIcon}\n                            onPress={() => this.setState({ visibleIcon: !this.state.visibleIcon })}\n                            containerStyle={{\n                                backgroundColor: '#fff',\n                                borderColor: '#fff',\n                                right: 7\n                            }}\n                        />\n                        <Button\n                            testID=\"testForgotPassword\"\n                            title=\"forgot password?\"\n                            type=\"clear\"\n                            onPress={() => this.props.navigation.navigate('ForgotPassword')}\n                            containerStyle={{ top: 5 }}\n                        />\n                    </View>\n\n                </View>\n\n                <View\n                    style={{\n                        flex: 1.8,\n                        flexDirection: 'row',\n                        justifyContent: 'space-around'\n                    }}\n                >\n                    <Button\n                        testID=\"testCreateAccount\"\n                        title=\"Create Account\"\n                        onPress={() => this.props.navigation.navigate('SignUpPage1')}\n                        type=\"clear\"\n                    />\n                    <View style={{ width: 120 }}>\n                        <Button\n                            testID=\"testSignInButton\"\n                            title=\"Next\"\n                            onPress={this.submitUserSignIn}\n                            loading={this.state.load}\n                        />\n                    </View>\n\n                </View>\n\n            </View>\n        );\n    }\n}"]}