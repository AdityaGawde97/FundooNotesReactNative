9791553a8551e5a7e007e5a2dcf05089
var cov_27dp9xljjj = function () {
  var path = "/home/admin10/Desktop/FundooNotes/src/Component/Login/SignIn.js";
  var hash = "ee0ab767363c8ee71cfaea950bda877b32688325";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/admin10/Desktop/FundooNotes/src/Component/Login/SignIn.js",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 21
        }
      },
      "1": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 19,
          column: 10
        }
      },
      "2": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "3": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "4": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "5": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "6": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 327
        }
      },
      "7": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "8": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "9": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "11": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 48
        }
      },
      "12": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "14": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 26
        }
      },
      "18": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "20": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "21": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 48
        }
      },
      "22": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 52
        }
      },
      "23": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "24": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "25": {
        start: {
          line: 105,
          column: 53
        },
        end: {
          line: 105,
          column: 77
        }
      },
      "26": {
        start: {
          line: 117,
          column: 60
        },
        end: {
          line: 117,
          column: 87
        }
      },
      "27": {
        start: {
          line: 125,
          column: 61
        },
        end: {
          line: 125,
          column: 116
        }
      },
      "28": {
        start: {
          line: 147,
          column: 41
        },
        end: {
          line: 147,
          column: 89
        }
      },
      "29": {
        start: {
          line: 163,
          column: 39
        },
        end: {
          line: 163,
          column: 84
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 20
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 24
          }
        },
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 51
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 61
          },
          end: {
            line: 53,
            column: 62
          }
        },
        loc: {
          start: {
            line: 53,
            column: 67
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 16
          }
        },
        loc: {
          start: {
            line: 57,
            column: 27
          },
          end: {
            line: 61,
            column: 13
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 13
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 105,
            column: 42
          },
          end: {
            line: 105,
            column: 43
          }
        },
        loc: {
          start: {
            line: 105,
            column: 53
          },
          end: {
            line: 105,
            column: 77
          }
        },
        line: 105
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 117,
            column: 46
          },
          end: {
            line: 117,
            column: 47
          }
        },
        loc: {
          start: {
            line: 117,
            column: 60
          },
          end: {
            line: 117,
            column: 87
          }
        },
        line: 117
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 125,
            column: 55
          },
          end: {
            line: 125,
            column: 56
          }
        },
        loc: {
          start: {
            line: 125,
            column: 61
          },
          end: {
            line: 125,
            column: 116
          }
        },
        line: 125
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 147,
            column: 37
          },
          end: {
            line: 147,
            column: 38
          }
        },
        loc: {
          start: {
            line: 147,
            column: 41
          },
          end: {
            line: 147,
            column: 89
          }
        },
        line: 147
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 163,
            column: 33
          },
          end: {
            line: 163,
            column: 34
          }
        },
        loc: {
          start: {
            line: 163,
            column: 39
          },
          end: {
            line: 163,
            column: 84
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 135,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 40
          },
          end: {
            line: 131,
            column: 42
          }
        }, {
          start: {
            line: 132,
            column: 40
          },
          end: {
            line: 135,
            column: 42
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ee0ab767363c8ee71cfaea950bda877b32688325"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _LoginCss = require("../../Css/LoginCss");

var _reactNativeMaterialTextfield = require("react-native-material-textfield");

var _reactNativeElements = require("react-native-elements");

var _FirebaseLoginServices = require("../../Firebase/FirebaseLoginServices");

var _reactNavigation = require("react-navigation");

var SignIn = function (_Component) {
  (0, _inherits2.default)(SignIn, _Component);

  function SignIn(props) {
    var _this;

    (0, _classCallCheck2.default)(this, SignIn);
    cov_27dp9xljjj.f[0]++;
    cov_27dp9xljjj.s[0]++;
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SignIn).call(this, props));
    _this.validateForm = (cov_27dp9xljjj.s[2]++, function () {
      cov_27dp9xljjj.f[1]++;
      var errors = (cov_27dp9xljjj.s[3]++, {});
      var formIsValid = (cov_27dp9xljjj.s[4]++, true);
      cov_27dp9xljjj.s[5]++;

      if (typeof _this.state.email !== "undefined") {
        cov_27dp9xljjj.b[0][0]++;
        var pattern = (cov_27dp9xljjj.s[6]++, new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i));
        cov_27dp9xljjj.s[7]++;

        if (!pattern.test(_this.state.email)) {
          cov_27dp9xljjj.b[1][0]++;
          cov_27dp9xljjj.s[8]++;
          formIsValid = false;
          cov_27dp9xljjj.s[9]++;
          errors["email"] = "*Enter valid email-ID.";
        } else {
          cov_27dp9xljjj.b[1][1]++;
        }
      } else {
        cov_27dp9xljjj.b[0][1]++;
      }

      cov_27dp9xljjj.s[10]++;

      if (!_this.state.email) {
        cov_27dp9xljjj.b[2][0]++;
        cov_27dp9xljjj.s[11]++;
        errors["email"] = "*Enter email id";
        cov_27dp9xljjj.s[12]++;
        formIsValid = false;
      } else {
        cov_27dp9xljjj.b[2][1]++;
      }

      cov_27dp9xljjj.s[13]++;

      if (!_this.state.password) {
        cov_27dp9xljjj.b[3][0]++;
        cov_27dp9xljjj.s[14]++;
        errors["password"] = "*Enter password";
        cov_27dp9xljjj.s[15]++;
        formIsValid = false;
      } else {
        cov_27dp9xljjj.b[3][1]++;
      }

      cov_27dp9xljjj.s[16]++;

      _this.setState({
        errors: errors
      });

      cov_27dp9xljjj.s[17]++;
      return formIsValid;
    });
    _this.submitUserSignIn = (cov_27dp9xljjj.s[18]++, function () {
      cov_27dp9xljjj.f[2]++;
      cov_27dp9xljjj.s[19]++;

      if (_this.validateForm()) {
        cov_27dp9xljjj.b[4][0]++;
        cov_27dp9xljjj.s[20]++;
        (0, _FirebaseLoginServices.loginUser)(_this.state.email, _this.state.password, function () {
          cov_27dp9xljjj.f[3]++;
          cov_27dp9xljjj.s[21]++;

          _this.setState({
            animating: true
          });

          cov_27dp9xljjj.s[22]++;
          alert('Yuo have login successfully');
        }, function (errors) {
          cov_27dp9xljjj.f[4]++;
          cov_27dp9xljjj.s[23]++;

          _this.setState({
            errors: errors
          });
        });
      } else {
        cov_27dp9xljjj.b[4][1]++;
      }
    });
    cov_27dp9xljjj.s[1]++;
    _this.state = {
      email: '',
      password: '',
      visibleIcon: false,
      animating: false,
      errors: {}
    };
    return _this;
  }

  (0, _createClass2.default)(SignIn, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      cov_27dp9xljjj.f[5]++;
      cov_27dp9xljjj.s[24]++;
      return _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.mainContainer
      }, _react.default.createElement(_reactNative.ProgressBarAndroid, {
        animating: this.state.animating,
        styleAttr: "Horizontal",
        color: "#2196F3"
      }), _react.default.createElement(_reactNative.Text, {
        style: _LoginCss.styles.appTitle
      }, _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#4285F4'
        }
      }, "F"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#DB4437'
        }
      }, "u"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#F4B400'
        }
      }, "n"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#4285F4'
        }
      }, "d"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#0F9D58'
        }
      }, "o"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#DB4437'
        }
      }, "o")), _react.default.createElement(_reactNative.Text, {
        style: _LoginCss.styles.createTitle
      }, "Sign in"), _react.default.createElement(_reactNative.Text, {
        style: {
          flex: 0,
          textAlign: 'center',
          fontSize: 17,
          top: '6%'
        }
      }, "with your Fundoo Account"), _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.inputContainer
      }, _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.inputView
      }, _react.default.createElement(_reactNativeMaterialTextfield.OutlinedTextField, {
        label: "Email",
        value: this.state.email,
        onChangeText: function onChangeText(email) {
          cov_27dp9xljjj.f[6]++;
          cov_27dp9xljjj.s[25]++;
          return _this2.setState({
            email: email
          });
        },
        error: this.state.errors.email,
        errorColor: "red"
      })), _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.passIconViewInSignIn
      }, _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.passView2
      }, _react.default.createElement(_reactNativeMaterialTextfield.OutlinedTextField, {
        label: "Password",
        value: this.state.password,
        onChangeText: function onChangeText(password) {
          cov_27dp9xljjj.f[7]++;
          cov_27dp9xljjj.s[26]++;
          return _this2.setState({
            password: password
          });
        },
        secureTextEntry: !this.state.visibleIcon,
        error: this.state.errors.password,
        errorColor: "red"
      })), _react.default.createElement(_reactNative.View, {
        style: {
          padding: '3%'
        }
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          cov_27dp9xljjj.f[8]++;
          cov_27dp9xljjj.s[27]++;
          return _this2.setState({
            visibleIcon: !_this2.state.visibleIcon
          });
        }
      }, !this.state.visibleIcon ? (cov_27dp9xljjj.b[5][0]++, _react.default.createElement(_reactNative.Image, {
        style: _LoginCss.styles.passIcon,
        source: require('../../Assets/visible.png')
      })) : (cov_27dp9xljjj.b[5][1]++, _react.default.createElement(_reactNative.Image, {
        style: _LoginCss.styles.passIcon,
        source: require('../../Assets/off.png')
      }))))), _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1,
          alignSelf: 'flex-start'
        }
      }, _react.default.createElement(_reactNativeElements.Button, {
        title: "forgot password?",
        type: "clear",
        onPress: function onPress() {
          cov_27dp9xljjj.f[9]++;
          cov_27dp9xljjj.s[28]++;
          return _this2.props.navigation.navigate('ForgotPassword');
        }
      }))), _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1.5,
          flexDirection: 'row',
          justifyContent: 'space-around'
        }
      }, _react.default.createElement(_reactNativeElements.Button, {
        title: "Create Account",
        onPress: function onPress() {
          cov_27dp9xljjj.f[10]++;
          cov_27dp9xljjj.s[29]++;
          return _this2.props.navigation.navigate('SignUpPage1');
        },
        type: "clear"
      }), _react.default.createElement(_reactNative.View, {
        style: {
          width: 120
        }
      }, _react.default.createElement(_reactNativeElements.Button, {
        title: "Next",
        onPress: this.submitUserSignIn
      }))));
    }
  }]);
  return SignIn;
}(_react.Component);

var _default = (0, _reactNavigation.withNavigation)(SignIn);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,