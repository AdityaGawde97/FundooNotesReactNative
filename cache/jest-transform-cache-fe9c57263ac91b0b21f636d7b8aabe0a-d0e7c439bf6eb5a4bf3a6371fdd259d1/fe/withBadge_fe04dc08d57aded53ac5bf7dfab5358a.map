{"version":3,"sources":["withBadge.js"],"names":["withBadge","value","options","WrappedComponent","WithBadge","props","bottom","hidden","left","containerStyle","badgeProps","right","top","badgeValue","StyleSheet","flatten","styles","container","badgeContainer","displayName","name","create","position","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,MAAQC,OAAR,uEAAkB,EAAlB;AAAA,SAAyB,UAAAC,gBAAgB,EAAI;AAC7D,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,UAEvBC,MAFuB,GAOrBJ,OAPqB,CAEvBI,MAFuB;AAAA,4BAOrBJ,OAPqB,CAGvBK,MAHuB;AAAA,UAGvBA,MAHuB,gCAGd,KAHc;AAAA,UAIvBC,IAJuB,GAOrBN,OAPqB,CAIvBM,IAJuB;AAAA,UAKvBC,cALuB,GAOrBP,OAPqB,CAKvBO,cALuB;AAAA,UAMpBC,UANoB,0CAOrBR,OAPqB;AAAA,2BASOA,OATP,CASnBS,KATmB;AAAA,UASnBA,KATmB,+BASX,CAAC,EATU;AAAA,yBASOT,OATP,CASNU,GATM;AAAA,UASNA,GATM,6BASA,CAAC,CATD;;AAWzB,UAAI,CAACX,KAAL,EAAY;AACVU,QAAAA,KAAK,GAAG,CAAC,CAAT;AACAC,QAAAA,GAAG,GAAG,CAAN;AACD;;AAED,UAAMC,UAAU,GAAG,OAAOZ,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACI,KAAD,CAAnC,GAA6CJ,KAAhE;AAEA,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEa,wBAAWC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,EAAmBR,cAAnB,CAAnB;AAAb,SACE,6BAAC,gBAAD,EAAsBJ,KAAtB,CADF,EAGG,CAACE,MAAD,IACC,6BAAC,cAAD;AACE,QAAA,KAAK,EAAEM,UADT;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,cAAc,EAAEC,wBAAWC,OAAX,CAAmB,CACjCC,MAAM,CAACE,cAD0B,EAEjC;AAAEZ,UAAAA,MAAM,EAANA,MAAF;AAAUE,UAAAA,IAAI,EAAJA,IAAV;AAAgBG,UAAAA,KAAK,EAALA,KAAhB;AAAuBC,UAAAA,GAAG,EAAHA;AAAvB,SAFiC,CAAnB;AAHlB,SAOMF,UAPN,EAJJ,CADF;AAiBD,KAnCD;;AAqCAN,IAAAA,SAAS,CAACe,WAAV,mBAAqChB,gBAAgB,CAACgB,WAAjB,IACnChB,gBAAgB,CAACiB,IADkB,IAEnC,WAFF;AAIA,WAAOhB,SAAP;AACD,GA3CiB;AAAA,CAAlB;;AA6CA,IAAMY,MAAM,GAAGF,wBAAWO,MAAX,CAAkB;AAC/BH,EAAAA,cAAc,EAAE;AACdI,IAAAA,QAAQ,EAAE;AADI,GADe;AAI/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTF,IAAAA,QAAQ,EAAE;AAHD;AAJoB,CAAlB,CAAf;;eAWetB,S","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport Badge from './Badge';\n\nconst withBadge = (value, options = {}) => WrappedComponent => {\n  const WithBadge = props => {\n    const {\n      bottom,\n      hidden = false,\n      left,\n      containerStyle,\n      ...badgeProps\n    } = options;\n\n    let { right = -16, top = -1 } = options;\n\n    if (!value) {\n      right = -3;\n      top = 3;\n    }\n\n    const badgeValue = typeof value === 'function' ? value(props) : value;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        <WrappedComponent {...props} />\n\n        {!hidden && (\n          <Badge\n            value={badgeValue}\n            status=\"error\"\n            containerStyle={StyleSheet.flatten([\n              styles.badgeContainer,\n              { bottom, left, right, top },\n            ])}\n            {...badgeProps}\n          />\n        )}\n      </View>\n    );\n  };\n\n  WithBadge.displayName = `WithBadge(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Component'})`;\n\n  return WithBadge;\n};\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute',\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n});\n\nexport default withBadge;\n"]}