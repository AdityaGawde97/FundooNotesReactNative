3fbdbbbece233f1a61dd0a45bda8830a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Image = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactNative = require("react-native");

var _helpers = require("../helpers");

var _config = require("../config");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Image = function (_React$Component) {
  (0, _inherits2.default)(Image, _React$Component);

  function Image() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Image);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Image)).call.apply(_getPrototypeOf2, [this].concat(args)));
    _this.state = {
      placeholderOpacity: new _reactNative.Animated.Value(1)
    };

    _this.onLoad = function () {
      var minimumWait = 100;
      var staggerNonce = 200 * Math.random();
      setTimeout(function () {
        _reactNative.Animated.timing(_this.state.placeholderOpacity, {
          toValue: 0,
          duration: 350,
          useNativeDriver: _reactNative.Platform.OS === 'android' ? false : true
        }).start();
      }, _reactNative.Platform.OS === 'android' ? 0 : Math.floor(minimumWait + staggerNonce));
    };

    return _this;
  }

  (0, _createClass2.default)(Image, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          placeholderStyle = _this$props.placeholderStyle,
          PlaceholderContent = _this$props.PlaceholderContent,
          containerStyle = _this$props.containerStyle,
          style = _this$props.style,
          ImageComponent = _this$props.ImageComponent,
          children = _this$props.children,
          attributes = (0, _objectWithoutProperties2.default)(_this$props, ["placeholderStyle", "PlaceholderContent", "containerStyle", "style", "ImageComponent", "children"]);
      var hasImage = Boolean(attributes.source);
      return _react.default.createElement(_reactNative.View, {
        accessibilityIgnoresInvertColors: true,
        style: _reactNative.StyleSheet.flatten([styles.container, containerStyle])
      }, _react.default.createElement(ImageComponent, (0, _extends2.default)({
        testID: "RNE__Image"
      }, attributes, {
        onLoad: this.onLoad,
        style: [_reactNative.StyleSheet.absoluteFill, {
          width: style.width,
          height: style.height
        }]
      })), _react.default.createElement(_reactNative.Animated.View, {
        pointerEvents: hasImage ? 'none' : 'auto',
        accessibilityElementsHidden: hasImage,
        importantForAccessibility: hasImage ? 'no-hide-descendants' : 'yes',
        style: [styles.placeholderContainer, {
          opacity: hasImage ? this.state.placeholderOpacity : 1
        }]
      }, _react.default.createElement(_reactNative.View, {
        testID: "RNE__Image__placeholder",
        style: _reactNative.StyleSheet.flatten([style, styles.placeholder, placeholderStyle])
      }, PlaceholderContent)), _react.default.createElement(_reactNative.View, {
        style: style
      }, children));
    }
  }]);
  return Image;
}(_react.default.Component);

exports.Image = Image;
var styles = {
  container: {
    backgroundColor: 'transparent',
    position: 'relative'
  },
  placeholderContainer: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),
  placeholder: {
    backgroundColor: '#bdbdbd',
    alignItems: 'center',
    justifyContent: 'center'
  }
};
Image.propTypes = _objectSpread({}, _reactNative.Image.propTypes, {
  ImageComponent: _propTypes.default.elementType,
  PlaceholderContent: _helpers.nodeType,
  containerStyle: _config.ViewPropTypes.style,
  placeholderStyle: _reactNative.Image.propTypes.style
});
Image.defaultProps = {
  ImageComponent: _reactNative.Image,
  style: {}
};

var _default = (0, _config.withTheme)(Image, 'Image');

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,