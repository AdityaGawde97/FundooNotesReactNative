a772ad451e851dca9220d8979aca2d77
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Header = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactNative = require("react-native");

var _config = require("../config");

var _helpers = require("../helpers");

var _Text = _interopRequireDefault(require("../text/Text"));

var _Icon = _interopRequireDefault(require("../icons/Icon"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ALIGN_STYLE = {
  left: 'flex-start',
  right: 'flex-end',
  center: 'center'
};

var Children = function Children(_ref) {
  var style = _ref.style,
      placement = _ref.placement,
      children = _ref.children;
  return _react.default.createElement(_reactNative.View, {
    style: _reactNative.StyleSheet.flatten([{
      alignItems: ALIGN_STYLE[placement]
    }, style])
  }, children == null || children === false ? null : children.text ? (0, _helpers.renderNode)(_Text.default, children.text, _objectSpread({
    numberOfLines: 1
  }, children)) : children.icon ? (0, _helpers.renderNode)(_Icon.default, _objectSpread({}, children, {
    name: children.icon,
    containerStyle: _reactNative.StyleSheet.flatten([{
      alignItems: ALIGN_STYLE[placement]
    }, children.containerStyle])
  })) : (0, _helpers.renderNode)(_Text.default, children));
};

Children.propTypes = {
  placement: _propTypes.default.oneOf(['left', 'center', 'right']),
  style: _config.ViewPropTypes.style,
  children: _propTypes.default.oneOfType([_helpers.nodeType, _propTypes.default.node])
};

var Header = function (_Component) {
  (0, _inherits2.default)(Header, _Component);

  function Header() {
    (0, _classCallCheck2.default)(this, Header);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Header).apply(this, arguments));
  }

  (0, _createClass2.default)(Header, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
          linearGradientProps = _this$props.linearGradientProps,
          ViewComponent = _this$props.ViewComponent;

      if (linearGradientProps && !global.Expo && !ViewComponent) {
        console.error("You need to pass a ViewComponent to use linearGradientProps !\nExample: ViewComponent={require('react-native-linear-gradient')}");
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          statusBarProps = _this$props2.statusBarProps,
          leftComponent = _this$props2.leftComponent,
          centerComponent = _this$props2.centerComponent,
          rightComponent = _this$props2.rightComponent,
          leftContainerStyle = _this$props2.leftContainerStyle,
          centerContainerStyle = _this$props2.centerContainerStyle,
          rightContainerStyle = _this$props2.rightContainerStyle,
          backgroundColor = _this$props2.backgroundColor,
          backgroundImage = _this$props2.backgroundImage,
          backgroundImageStyle = _this$props2.backgroundImageStyle,
          containerStyle = _this$props2.containerStyle,
          placement = _this$props2.placement,
          barStyle = _this$props2.barStyle,
          children = _this$props2.children,
          linearGradientProps = _this$props2.linearGradientProps,
          _this$props2$ViewComp = _this$props2.ViewComponent,
          ViewComponent = _this$props2$ViewComp === void 0 ? linearGradientProps && global.Expo ? global.Expo.LinearGradient : _reactNative.ImageBackground : _this$props2$ViewComp,
          theme = _this$props2.theme,
          attributes = (0, _objectWithoutProperties2.default)(_this$props2, ["statusBarProps", "leftComponent", "centerComponent", "rightComponent", "leftContainerStyle", "centerContainerStyle", "rightContainerStyle", "backgroundColor", "backgroundImage", "backgroundImageStyle", "containerStyle", "placement", "barStyle", "children", "linearGradientProps", "ViewComponent", "theme"]);
      return _react.default.createElement(ViewComponent, (0, _extends2.default)({
        testID: "headerContainer"
      }, attributes, {
        style: _reactNative.StyleSheet.flatten([styles.container(theme), backgroundColor && {
          backgroundColor: backgroundColor
        }, containerStyle]),
        source: backgroundImage,
        imageStyle: backgroundImageStyle
      }, linearGradientProps), _react.default.createElement(_reactNative.StatusBar, (0, _extends2.default)({
        barStyle: barStyle
      }, statusBarProps)), _react.default.createElement(Children, {
        style: _reactNative.StyleSheet.flatten([placement === 'center' && styles.rightLeftContainer, leftContainerStyle]),
        placement: "left"
      }, _react.default.isValidElement(children) && children || children[0] || leftComponent), _react.default.createElement(Children, {
        style: _reactNative.StyleSheet.flatten([styles.centerContainer, placement !== 'center' && {
          paddingHorizontal: _reactNative.Platform.select({
            android: 16,
            default: 15
          })
        }, centerContainerStyle]),
        placement: placement
      }, children[1] || centerComponent), _react.default.createElement(Children, {
        style: _reactNative.StyleSheet.flatten([placement === 'center' && styles.rightLeftContainer, rightContainerStyle]),
        placement: "right"
      }, children[2] || rightComponent));
    }
  }]);
  return Header;
}(_react.Component);

exports.Header = Header;
Header.propTypes = {
  placement: _propTypes.default.oneOf(['left', 'center', 'right']),
  leftComponent: _helpers.nodeType,
  centerComponent: _helpers.nodeType,
  rightComponent: _helpers.nodeType,
  leftContainerStyle: _config.ViewPropTypes.style,
  centerContainerStyle: _config.ViewPropTypes.style,
  rightContainerStyle: _config.ViewPropTypes.style,
  backgroundColor: _propTypes.default.string,
  backgroundImage: _reactNative.Image.propTypes.source,
  backgroundImageStyle: _reactNative.Image.propTypes.style,
  containerStyle: _config.ViewPropTypes.style,
  statusBarProps: _propTypes.default.object,
  barStyle: _propTypes.default.oneOf(['default', 'light-content', 'dark-content']),
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
  theme: _propTypes.default.object,
  linearGradientProps: _propTypes.default.object,
  ViewComponent: _propTypes.default.elementType
};
Header.defaultProps = {
  placement: 'center',
  children: []
};
var styles = {
  container: function container(theme) {
    return {
      borderBottomColor: '#f2f2f2',
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth,
      paddingHorizontal: 10,
      backgroundColor: theme.colors.primary,
      paddingTop: (0, _config.getStatusBarHeight)(),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      height: _reactNative.Platform.select({
        android: 56,
        default: 44
      }) + (0, _config.getStatusBarHeight)()
    };
  },
  centerContainer: {
    flex: 3
  },
  rightLeftContainer: {
    flex: 1
  }
};

var _default = (0, _config.withTheme)(Header, 'Header');

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,