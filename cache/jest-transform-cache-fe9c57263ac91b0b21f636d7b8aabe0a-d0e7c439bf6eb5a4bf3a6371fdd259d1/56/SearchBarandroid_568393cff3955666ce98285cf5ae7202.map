{"version":3,"sources":["SearchBar-android.js"],"names":["ANDROID_GRAY","defaultSearchIcon","type","size","color","name","defaultCancelIcon","defaultClearIcon","SearchBar","props","focus","input","blur","clear","onChangeText","onClear","cancel","onCancel","onFocus","setState","hasFocus","isEmpty","value","onBlur","text","state","clearIcon","containerStyle","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","searchIcon","cancelIcon","showLoading","loadingProps","attributes","loadingStyle","style","otherLoadingProps","StyleSheet","flatten","styles","container","paddingHorizontal","inputContainer","Icon","onPress","flexDirection","marginRight","key","Component","propTypes","PropTypes","string","nodeType","object","bool","ViewPropTypes","Text","func","defaultProps","create","backgroundColor","paddingTop","paddingBottom","marginLeft","borderBottomWidth","width"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { StyleSheet, View, ActivityIndicator, Text } from 'react-native';\n\nimport { ViewPropTypes } from '../config';\nimport { nodeType, renderNode } from '../helpers';\n\nimport Input from '../input/Input';\nimport Icon from '../icons/Icon';\n\nconst ANDROID_GRAY = 'rgba(0, 0, 0, 0.54)';\n\nconst defaultSearchIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'search',\n};\n\nconst defaultCancelIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'arrow-back',\n};\n\nconst defaultClearIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'clear',\n};\n\nclass SearchBar extends Component {\n  focus = () => {\n    this.input.focus();\n  };\n\n  blur = () => {\n    this.input.blur();\n  };\n\n  clear = () => {\n    this.input.clear();\n    this.onChangeText('');\n    this.props.onClear();\n  };\n\n  cancel = () => {\n    this.blur();\n    this.props.onCancel();\n  };\n\n  onFocus = () => {\n    this.props.onFocus();\n    this.setState({\n      hasFocus: true,\n      isEmpty: this.props.value === '',\n    });\n  };\n\n  onBlur = () => {\n    this.props.onBlur();\n    this.setState({ hasFocus: false });\n  };\n\n  onChangeText = text => {\n    this.props.onChangeText(text);\n    this.setState({ isEmpty: text === '' });\n  };\n\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      hasFocus: false,\n      isEmpty: value ? value === '' : true,\n    };\n  }\n\n  render() {\n    const {\n      clearIcon,\n      containerStyle,\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      searchIcon,\n      cancelIcon,\n      showLoading,\n      loadingProps,\n      ...attributes\n    } = this.props;\n    const { hasFocus, isEmpty } = this.state;\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        <Input\n          testID=\"searchInput\"\n          {...attributes}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChangeText={this.onChangeText}\n          ref={input => {\n            this.input = input;\n          }}\n          containerStyle={{ paddingHorizontal: 0 }}\n          inputStyle={StyleSheet.flatten([styles.input, inputStyle])}\n          inputContainerStyle={StyleSheet.flatten([\n            styles.inputContainer,\n            inputContainerStyle,\n          ])}\n          leftIcon={\n            hasFocus\n              ? renderNode(Icon, cancelIcon, {\n                  ...defaultCancelIcon,\n                  onPress: this.cancel,\n                })\n              : renderNode(Icon, searchIcon, defaultSearchIcon)\n          }\n          leftIconContainerStyle={StyleSheet.flatten([\n            styles.leftIconContainerStyle,\n            leftIconContainerStyle,\n          ])}\n          rightIcon={\n            <View style={{ flexDirection: 'row' }}>\n              {showLoading && (\n                <ActivityIndicator\n                  key=\"loading\"\n                  style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])}\n                  {...otherLoadingProps}\n                />\n              )}\n              {!isEmpty &&\n                renderNode(Icon, clearIcon, {\n                  ...defaultClearIcon,\n                  key: 'cancel',\n                  onPress: this.clear,\n                })}\n            </View>\n          }\n          rightIconContainerStyle={StyleSheet.flatten([\n            styles.rightIconContainerStyle,\n            rightIconContainerStyle,\n          ])}\n        />\n      </View>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  cancelIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClear: PropTypes.func,\n  onCancel: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n};\n\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  onClear: () => null,\n  onCancel: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n  searchIcon: defaultSearchIcon,\n  clearIcon: defaultClearIcon,\n  cancelIcon: defaultCancelIcon,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  input: {\n    marginLeft: 24,\n    marginRight: 8,\n  },\n  inputContainer: {\n    borderBottomWidth: 0,\n    width: '100%',\n  },\n  rightIconContainerStyle: {\n    marginRight: 8,\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8,\n  },\n});\n\nexport default SearchBar;\n"]}