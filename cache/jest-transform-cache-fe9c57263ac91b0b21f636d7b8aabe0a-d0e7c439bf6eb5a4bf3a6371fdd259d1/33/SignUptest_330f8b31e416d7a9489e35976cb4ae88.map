{"version":3,"sources":["SignUp-test.js"],"names":["findElement","tree","element","result","undefined","node","children","props","testId","wrapper1","it","renderer","create","describe","expect","toMatchSnapshot","state","toEqual","firstName","find","first","lastName","last","onChangeText","findWhere","prop","toExist","instance","validateForm","toBe","wrapper2","emailInput","wrapper3","tree3","toJSON","password","confirm","length","passIcon","simulate","toBeDefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\n\nimport renderer from 'react-test-renderer';\nimport SignUpPage1 from '../../src/Component/Authentication/SignUpPage1';\nimport SignUpPage2 from '../../src/Component/Authentication/SignUpPage2';\nimport SignUpPage3 from \"../../src/Component/Authentication/SignUpPage3\"\n\nconst findElement = (tree, element) => {\n    let result = undefined;\n    for(node in tree.children){\n        if(tree.children[node].props.testId=element){\n            result = true;\n        }\n    }\n    return result;\n}\n\n/**************************** SignUpPage1 Component Testing ******************************/\n\nconst wrapper1 = shallow(<SignUpPage1/>)\n\n// This test just uses Jest snapshot testing\nit('SignUpPage1 Page renders correctly', () => {\n    renderer.create(<SignUpPage1 />);\n});\n\n// Using Jest + Enzyme\ndescribe('<SignUpPage1/>', () => {\n    it('SignUpPage1 Matching SnapShot', () => {\n        expect(shallow(<SignUpPage1 />)).toMatchSnapshot();\n    });\n\n    it('checking initial state', () => {\n        expect(wrapper1.state('firstName')).toEqual('');\n        expect(wrapper1.state('lastName')).toEqual('');\n    })\n    const firstName = wrapper1.find('OutlinedTextField').first();\n    const lastName = wrapper1.find('OutlinedTextField').last();\n\n    it('testing state of component after onChangeText event occur', () => {\n\n        firstName.props().onChangeText('Aditya');\n\n        lastName.props().onChangeText('Gawde');\n\n        expect(wrapper1.state('firstName')).toEqual('Aditya');\n        expect(wrapper1.state('lastName')).toEqual('Gawde');\n    })\n\n    it('props of OutlinedTextField', () => {\n        expect(firstName.findWhere((node) => node.prop('label') === 'First name')).toExist();\n        expect(lastName.findWhere((node) => node.prop('label') === 'Last name')).toExist();\n    });\n\n    it('testing validateForm mathod for first name and last name validation', () => {\n\n        const instance = wrapper1.instance()\n        expect(instance.validateForm()).toBe(true)\n\n        firstName.props().onChangeText('');\n        expect(instance.validateForm()).toBe(false)\n\n        lastName.props().onChangeText('');\n        expect(instance.validateForm()).toBe(false)\n\n    })\n});\n\n/**************************** SignUpPage2 Component Testing ******************************/\n\nconst wrapper2 = shallow(<SignUpPage2/>)\n\nit('SignUpPage2 Page renders correctly', () => {\n    renderer.create(<SignUpPage2 />);\n});\n\ndescribe('<SignUpPage2/>', () => {\n    it('SignUpPage2 Matching SnapShot', () => {\n        expect(shallow(<SignUpPage2 />)).toMatchSnapshot();\n    });\n\n    it('checking initial state', () => {\n        expect(wrapper2.state('email')).toEqual('');\n    })\n    const emailInput = wrapper2.find('OutlinedTextField').first();\n\n    it('testing state of component after onChangeText event occur', () => {\n\n        emailInput.props().onChangeText('andy@gmail.com');\n\n        expect(wrapper2.state('email')).toEqual('andy@gmail.com');\n    })\n\n    it('props of OutlinedTextField', () => {\n        expect(emailInput.findWhere((node) => node.prop('label') === 'Email')).toExist();\n        expect(emailInput.findWhere((node) => node.prop('errorColor') === 'red')).toExist();\n    });\n\n    it('testing validateForm mathod for email validation', () => {\n\n        const instance = wrapper2.instance()\n        expect(instance.validateForm()).toBe(true)\n\n        emailInput.props().onChangeText('andygmail.com');\n        expect(instance.validateForm()).toBe(false)\n\n        emailInput.props().onChangeText('andy@gmail.com');\n        expect(instance.validateForm()).toBe(true)\n\n    })\n});\n\n/**************************** SignUpPage3 Component Testing ******************************/\n\nconst wrapper3 = shallow(<SignUpPage3/>)\nconst tree3 = renderer.create(<SignUpPage3 />).toJSON()\n\nit('SignUpPage3 Page renders correctly', () => {\n    renderer.create(<SignUpPage3 />);\n});\n\ndescribe('<SignUpPage3/>', () => {\n    it('SignUpPage3 Matching SnapShot', () => {\n        expect(shallow(<SignUpPage3 />)).toMatchSnapshot();\n    });\n\n    it('checking initial state', () => {\n        expect(wrapper3.state('password')).toEqual('');\n        expect(wrapper3.state('confirm')).toEqual('');\n    })\n\n    const password = wrapper3.find('OutlinedTextField').first();\n    const confirm = wrapper3.find('OutlinedTextField').last();\n\n    it('testing state of component after onChangeText event occur', () => {\n\n        password.props().onChangeText('Abc@1234');\n\n        confirm.props().onChangeText('Abc@1234');\n\n        expect(wrapper3.state('password')).toEqual('Abc@1234');\n        expect(wrapper3.state('confirm')).toEqual('Abc@1234');\n    })\n\n    it('props of OutlinedTextField', () => {\n        expect(password.findWhere((node) => node.prop('label') === 'Password')).toExist();\n        expect(password.findWhere((node) => node.prop('errorColor') === 'red')).toExist();\n        expect(confirm.findWhere((node) => node.prop('label') === 'Confirm')).toExist();\n        expect(confirm.findWhere((node) => node.prop('errorColor') === 'red')).toExist();\n    });\n\n    it('testing validateForm mathod for email validation', () => {\n\n        const instance = wrapper3.instance()\n        expect(instance.validateForm()).toBe(true)\n\n        password.props().onChangeText('Abc1234');\n        expect(instance.validateForm()).toBe(false)\n        password.props().onChangeText('abc@dgdfhd');\n        expect(instance.validateForm()).toBe(false)\n        password.props().onChangeText('abc1234');\n        expect(instance.validateForm()).toBe(false)\n\n        password.props().onChangeText('Abc@1234');\n        expect(instance.validateForm()).toBe(true)\n\n        confirm.props().onChangeText('Xyz@1234');\n        expect(instance.validateForm()).toBe(false)\n\n        confirm.props().onChangeText('Abc@1234');\n        expect(instance.validateForm()).toBe(true)\n\n    })\n\n    it('testing visible password toggling', () => {\n        expect(wrapper3.find('CheckBox').length).toBe(1);\n        expect(wrapper3.state('visibleIcon')).toEqual(false)\n        const passIcon = wrapper3.find('CheckBox')\n\n        passIcon.simulate('press');\n        expect(wrapper3.state('visibleIcon')).toEqual(true)\n        passIcon.simulate('press');\n        expect(wrapper3.state('visibleIcon')).toEqual(false)\n        expect(findElement(tree3, 'testPassVisibility2')).toBeDefined();\n    })\n});\n"]}