{"version":3,"sources":["index.js"],"names":["Label","props","label","offset","disabled","restricted","fontSize","activeFontSize","contentInset","errorColor","baseColor","tintColor","style","focusAnimation","labelAnimation","color","interpolate","inputRange","outputRange","textStyle","lineHeight","x0","y0","x1","y1","containerStyle","transform","scale","translateY","translateX","styles","container","text","PureComponent","defaultProps","numberOfLines","propTypes","PropTypes","number","bool","isRequired","string","instanceOf","Animated","Value","shape","Text"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Label extends PureComponent {\n  static defaultProps = {\n    numberOfLines: 1,\n    disabled: false,\n    restricted: false,\n  };\n\n  static propTypes = {\n    numberOfLines: PropTypes.number,\n\n    disabled: PropTypes.bool,\n    restricted: PropTypes.bool,\n\n    fontSize: PropTypes.number.isRequired,\n    activeFontSize: PropTypes.number.isRequired,\n\n    baseColor: PropTypes.string.isRequired,\n    tintColor: PropTypes.string.isRequired,\n    errorColor: PropTypes.string.isRequired,\n\n    focusAnimation: PropTypes\n      .instanceOf(Animated.Value)\n      .isRequired,\n\n    labelAnimation: PropTypes\n      .instanceOf(Animated.Value)\n      .isRequired,\n\n    contentInset: PropTypes.shape({\n      label: PropTypes.number,\n    }),\n\n    offset: PropTypes.shape({\n      x0: PropTypes.number,\n      y0: PropTypes.number,\n      x1: PropTypes.number,\n      y1: PropTypes.number,\n    }),\n\n    style: Animated.Text.propTypes.style,\n    label: PropTypes.string,\n  };\n\n  render() {\n    let {\n      label,\n      offset,\n      disabled,\n      restricted,\n      fontSize,\n      activeFontSize,\n      contentInset,\n      errorColor,\n      baseColor,\n      tintColor,\n      style,\n      focusAnimation,\n      labelAnimation,\n      ...props\n    } = this.props;\n\n    if (null == label) {\n      return null;\n    }\n\n    let color = disabled?\n      baseColor:\n      restricted?\n        errorColor:\n        focusAnimation.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [errorColor, baseColor, tintColor],\n        });\n\n    let textStyle = {\n      lineHeight: fontSize,\n      fontSize,\n      color,\n    };\n\n    let { x0, y0, x1, y1 } = offset;\n\n    y0 += activeFontSize;\n    y0 += contentInset.label;\n    y0 += fontSize * 0.25;\n\n    let containerStyle = {\n      transform: [{\n        scale: labelAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, activeFontSize / fontSize],\n        }),\n      }, {\n        translateY: labelAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [y0, y1],\n        }),\n      }, {\n        translateX: labelAnimation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [x0, x1],\n        }),\n      }],\n    };\n\n    return (\n      <Animated.View style={[styles.container, containerStyle]}>\n        <Animated.Text style={[styles.text, style, textStyle]} {...props}>\n          {label}\n        </Animated.Text>\n      </Animated.View>\n    );\n  }\n}\n"]}