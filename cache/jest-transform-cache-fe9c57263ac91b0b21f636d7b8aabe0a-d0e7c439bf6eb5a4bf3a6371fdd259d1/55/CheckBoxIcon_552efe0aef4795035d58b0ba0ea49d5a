bf9d2eadd6768f5546185a1cc57fda0e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));

var _getIconType = _interopRequireDefault(require("../helpers/getIconType"));

var CheckBoxIcon = function CheckBoxIcon(_ref) {
  var checked = _ref.checked,
      onIconPress = _ref.onIconPress,
      onLongIconPress = _ref.onLongIconPress,
      size = _ref.size,
      checkedIcon = _ref.checkedIcon,
      uncheckedIcon = _ref.uncheckedIcon,
      iconType = _ref.iconType,
      checkedColor = _ref.checkedColor,
      uncheckedColor = _ref.uncheckedColor;

  if (checked && _react.default.isValidElement(checkedIcon)) {
    return checkedIcon;
  }

  if (!checked && _react.default.isValidElement(uncheckedIcon)) {
    return uncheckedIcon;
  }

  var VectorIcon = iconType ? (0, _getIconType.default)(iconType) : _FontAwesome.default;
  return _react.default.createElement(VectorIcon, {
    color: checked ? checkedColor : uncheckedColor,
    name: checked ? checkedIcon : uncheckedIcon,
    size: size || 24,
    style: {
      minWidth: size || 24
    },
    onLongPress: onLongIconPress,
    onPress: onIconPress
  });
};

CheckBoxIcon.propTypes = {
  checked: _propTypes.default.bool,
  onIconPress: _propTypes.default.func,
  onLongIconPress: _propTypes.default.func,
  size: _propTypes.default.number,
  checkedIcon: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
  uncheckedIcon: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),
  iconType: _propTypes.default.string,
  checkedColor: _propTypes.default.string,
  uncheckedColor: _propTypes.default.string
};
var _default = CheckBoxIcon;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNoZWNrQm94SWNvbi5qcyJdLCJuYW1lcyI6WyJDaGVja0JveEljb24iLCJjaGVja2VkIiwib25JY29uUHJlc3MiLCJvbkxvbmdJY29uUHJlc3MiLCJzaXplIiwiY2hlY2tlZEljb24iLCJ1bmNoZWNrZWRJY29uIiwiaWNvblR5cGUiLCJjaGVja2VkQ29sb3IiLCJ1bmNoZWNrZWRDb2xvciIsIlJlYWN0IiwiaXNWYWxpZEVsZW1lbnQiLCJWZWN0b3JJY29uIiwiRkFJY29uIiwibWluV2lkdGgiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9uZU9mVHlwZSIsInN0cmluZyIsImVsZW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFFQSxJQUFNQSxZQUFZLEdBQUcsU0FBZkEsWUFBZSxPQVVmO0FBQUEsTUFUSkMsT0FTSSxRQVRKQSxPQVNJO0FBQUEsTUFSSkMsV0FRSSxRQVJKQSxXQVFJO0FBQUEsTUFQSkMsZUFPSSxRQVBKQSxlQU9JO0FBQUEsTUFOSkMsSUFNSSxRQU5KQSxJQU1JO0FBQUEsTUFMSkMsV0FLSSxRQUxKQSxXQUtJO0FBQUEsTUFKSkMsYUFJSSxRQUpKQSxhQUlJO0FBQUEsTUFISkMsUUFHSSxRQUhKQSxRQUdJO0FBQUEsTUFGSkMsWUFFSSxRQUZKQSxZQUVJO0FBQUEsTUFESkMsY0FDSSxRQURKQSxjQUNJOztBQUNKLE1BQUlSLE9BQU8sSUFBSVMsZUFBTUMsY0FBTixDQUFxQk4sV0FBckIsQ0FBZixFQUFrRDtBQUNoRCxXQUFPQSxXQUFQO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDSixPQUFELElBQVlTLGVBQU1DLGNBQU4sQ0FBcUJMLGFBQXJCLENBQWhCLEVBQXFEO0FBQ25ELFdBQU9BLGFBQVA7QUFDRDs7QUFFRCxNQUFNTSxVQUFVLEdBQUdMLFFBQVEsR0FBRywwQkFBWUEsUUFBWixDQUFILEdBQTJCTSxvQkFBdEQ7QUFFQSxTQUNFLDZCQUFDLFVBQUQ7QUFDRSxJQUFBLEtBQUssRUFBRVosT0FBTyxHQUFHTyxZQUFILEdBQWtCQyxjQURsQztBQUVFLElBQUEsSUFBSSxFQUFFUixPQUFPLEdBQUdJLFdBQUgsR0FBaUJDLGFBRmhDO0FBR0UsSUFBQSxJQUFJLEVBQUVGLElBQUksSUFBSSxFQUhoQjtBQUlFLElBQUEsS0FBSyxFQUFFO0FBQUVVLE1BQUFBLFFBQVEsRUFBRVYsSUFBSSxJQUFJO0FBQXBCLEtBSlQ7QUFLRSxJQUFBLFdBQVcsRUFBRUQsZUFMZjtBQU1FLElBQUEsT0FBTyxFQUFFRDtBQU5YLElBREY7QUFVRCxDQS9CRDs7QUFpQ0FGLFlBQVksQ0FBQ2UsU0FBYixHQUF5QjtBQUN2QmQsRUFBQUEsT0FBTyxFQUFFZSxtQkFBVUMsSUFESTtBQUV2QmYsRUFBQUEsV0FBVyxFQUFFYyxtQkFBVUUsSUFGQTtBQUd2QmYsRUFBQUEsZUFBZSxFQUFFYSxtQkFBVUUsSUFISjtBQUl2QmQsRUFBQUEsSUFBSSxFQUFFWSxtQkFBVUcsTUFKTztBQUt2QmQsRUFBQUEsV0FBVyxFQUFFVyxtQkFBVUksU0FBVixDQUFvQixDQUFDSixtQkFBVUssTUFBWCxFQUFtQkwsbUJBQVVNLE9BQTdCLENBQXBCLENBTFU7QUFNdkJoQixFQUFBQSxhQUFhLEVBQUVVLG1CQUFVSSxTQUFWLENBQW9CLENBQUNKLG1CQUFVSyxNQUFYLEVBQW1CTCxtQkFBVU0sT0FBN0IsQ0FBcEIsQ0FOUTtBQU92QmYsRUFBQUEsUUFBUSxFQUFFUyxtQkFBVUssTUFQRztBQVF2QmIsRUFBQUEsWUFBWSxFQUFFUSxtQkFBVUssTUFSRDtBQVN2QlosRUFBQUEsY0FBYyxFQUFFTyxtQkFBVUs7QUFUSCxDQUF6QjtlQVllckIsWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IEZBSWNvbiBmcm9tICdyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL0ZvbnRBd2Vzb21lJztcblxuaW1wb3J0IGdldEljb25UeXBlIGZyb20gJy4uL2hlbHBlcnMvZ2V0SWNvblR5cGUnO1xuXG5jb25zdCBDaGVja0JveEljb24gPSAoe1xuICBjaGVja2VkLFxuICBvbkljb25QcmVzcyxcbiAgb25Mb25nSWNvblByZXNzLFxuICBzaXplLFxuICBjaGVja2VkSWNvbixcbiAgdW5jaGVja2VkSWNvbixcbiAgaWNvblR5cGUsXG4gIGNoZWNrZWRDb2xvcixcbiAgdW5jaGVja2VkQ29sb3IsXG59KSA9PiB7XG4gIGlmIChjaGVja2VkICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoZWNrZWRJY29uKSkge1xuICAgIHJldHVybiBjaGVja2VkSWNvbjtcbiAgfVxuXG4gIGlmICghY2hlY2tlZCAmJiBSZWFjdC5pc1ZhbGlkRWxlbWVudCh1bmNoZWNrZWRJY29uKSkge1xuICAgIHJldHVybiB1bmNoZWNrZWRJY29uO1xuICB9XG5cbiAgY29uc3QgVmVjdG9ySWNvbiA9IGljb25UeXBlID8gZ2V0SWNvblR5cGUoaWNvblR5cGUpIDogRkFJY29uO1xuXG4gIHJldHVybiAoXG4gICAgPFZlY3Rvckljb25cbiAgICAgIGNvbG9yPXtjaGVja2VkID8gY2hlY2tlZENvbG9yIDogdW5jaGVja2VkQ29sb3J9XG4gICAgICBuYW1lPXtjaGVja2VkID8gY2hlY2tlZEljb24gOiB1bmNoZWNrZWRJY29ufVxuICAgICAgc2l6ZT17c2l6ZSB8fCAyNH1cbiAgICAgIHN0eWxlPXt7IG1pbldpZHRoOiBzaXplIHx8IDI0IH19XG4gICAgICBvbkxvbmdQcmVzcz17b25Mb25nSWNvblByZXNzfVxuICAgICAgb25QcmVzcz17b25JY29uUHJlc3N9XG4gICAgLz5cbiAgKTtcbn07XG5cbkNoZWNrQm94SWNvbi5wcm9wVHlwZXMgPSB7XG4gIGNoZWNrZWQ6IFByb3BUeXBlcy5ib29sLFxuICBvbkljb25QcmVzczogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uTG9uZ0ljb25QcmVzczogUHJvcFR5cGVzLmZ1bmMsXG4gIHNpemU6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoZWNrZWRJY29uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxuICB1bmNoZWNrZWRJY29uOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZWxlbWVudF0pLFxuICBpY29uVHlwZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgY2hlY2tlZENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB1bmNoZWNrZWRDb2xvcjogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENoZWNrQm94SWNvbjtcbiJdfQ==