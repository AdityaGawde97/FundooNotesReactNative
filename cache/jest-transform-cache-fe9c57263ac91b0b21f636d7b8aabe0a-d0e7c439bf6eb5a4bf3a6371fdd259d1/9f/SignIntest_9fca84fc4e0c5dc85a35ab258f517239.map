{"version":3,"sources":["SignIn-test.js"],"names":["wrapper","it","renderer","create","describe","expect","toMatchSnapshot","state","toEqual","emailInput","find","first","passInput","last","props","onChangeText","findWhere","node","prop","toExist","instance","validateForm","toBe","length","passIcon","simulate","nextButton","setState","email","password"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,OAAO,GAAG,qBAAQ,6BAAC,eAAD,OAAR,CAAhB;AAIAC,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACtCC,6BAASC,MAAT,CAAgB,6BAAC,eAAD,OAAhB;AACH,CAFC,CAAF;AAIAC,QAAQ,CAAC,WAAD,EAAc,YAAM;AACxBH,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACtCI,IAAAA,MAAM,CAAC,qBAAQ,6BAAC,eAAD,OAAR,CAAD,CAAN,CAA4BC,eAA5B;AACH,GAFC,CAAF;AAIAL,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AAC/BI,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,OAAd,CAAD,CAAN,CAA+BC,OAA/B,CAAuC,EAAvC;AACAH,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,UAAd,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,EAA1C;AACH,GAHC,CAAF;AAKA,MAAMC,UAAU,GAAGT,OAAO,CAACU,IAAR,CAAa,mBAAb,EAAkCC,KAAlC,EAAnB;AACA,MAAMC,SAAS,GAAGZ,OAAO,CAACU,IAAR,CAAa,mBAAb,EAAkCG,IAAlC,EAAlB;AAEAZ,EAAAA,EAAE,CAAC,2DAAD,EAA8D,YAAM;AAElEQ,IAAAA,UAAU,CAACK,KAAX,GAAmBC,YAAnB,CAAgC,gBAAhC;AAEAH,IAAAA,SAAS,CAACE,KAAV,GAAkBC,YAAlB,CAA+B,UAA/B;AAEAV,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,OAAd,CAAD,CAAN,CAA+BC,OAA/B,CAAuC,gBAAvC;AACAH,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,UAAd,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,UAA1C;AACH,GARC,CAAF;AAUAP,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACnCI,IAAAA,MAAM,CAACI,UAAU,CAACO,SAAX,CAAqB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,CAAU,OAAV,MAAuB,OAAjC;AAAA,KAArB,CAAD,CAAN,CAAuEC,OAAvE;AACAd,IAAAA,MAAM,CAACI,UAAU,CAACO,SAAX,CAAqB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,CAAU,YAAV,MAA4B,KAAtC;AAAA,KAArB,CAAD,CAAN,CAA0EC,OAA1E;AACH,GAHC,CAAF;AAKAlB,EAAAA,EAAE,CAAC,kDAAD,EAAqD,YAAM;AAEzD,QAAMmB,QAAQ,GAAGpB,OAAO,CAACoB,QAAR,EAAjB;AACAf,IAAAA,MAAM,CAACe,QAAQ,CAACC,YAAT,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,IAArC;AAEAb,IAAAA,UAAU,CAACK,KAAX,GAAmBC,YAAnB,CAAgC,eAAhC;AACAV,IAAAA,MAAM,CAACe,QAAQ,CAACC,YAAT,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,KAArC;AAEAb,IAAAA,UAAU,CAACK,KAAX,GAAmBC,YAAnB,CAAgC,gBAAhC;AACAV,IAAAA,MAAM,CAACe,QAAQ,CAACC,YAAT,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,IAArC;AAEH,GAXC,CAAF;AAaArB,EAAAA,EAAE,CAAC,qDAAD,EAAwD,YAAM;AAE5D,QAAMmB,QAAQ,GAAGpB,OAAO,CAACoB,QAAR,EAAjB;AAEAR,IAAAA,SAAS,CAACE,KAAV,GAAkBC,YAAlB,CAA+B,EAA/B;AACAV,IAAAA,MAAM,CAACe,QAAQ,CAACC,YAAT,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,KAArC;AAEAV,IAAAA,SAAS,CAACE,KAAV,GAAkBC,YAAlB,CAA+B,UAA/B;AACAV,IAAAA,MAAM,CAACe,QAAQ,CAACC,YAAT,EAAD,CAAN,CAAgCC,IAAhC,CAAqC,IAArC;AACH,GATC,CAAF;AAWArB,EAAAA,EAAE,CAAC,mCAAD,EAAsC,YAAM;AAC1CI,IAAAA,MAAM,CAACL,OAAO,CAACU,IAAR,CAAa,UAAb,EAAyBa,MAA1B,CAAN,CAAwCD,IAAxC,CAA6C,CAA7C;AACAjB,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,aAAd,CAAD,CAAN,CAAqCC,OAArC,CAA6C,KAA7C;AACA,QAAMgB,QAAQ,GAAGxB,OAAO,CAACU,IAAR,CAAa,UAAb,CAAjB;AAEAc,IAAAA,QAAQ,CAACC,QAAT,CAAkB,OAAlB;AACApB,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,aAAd,CAAD,CAAN,CAAqCC,OAArC,CAA6C,IAA7C;AACAgB,IAAAA,QAAQ,CAACC,QAAT,CAAkB,OAAlB;AACApB,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,aAAd,CAAD,CAAN,CAAqCC,OAArC,CAA6C,KAA7C;AACH,GATC,CAAF;AAWAP,EAAAA,EAAE,CAAC,gBAAD,EAAmB,YAAM;AACvBI,IAAAA,MAAM,CAACL,OAAO,CAACgB,SAAR,CAAkB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,CAAU,OAAV,MAAuB,gBAAjC;AAAA,KAAlB,EAAqEK,MAAtE,CAAN,CAAoFD,IAApF,CAAyF,CAAzF;AACA,QAAMI,UAAU,GAAG1B,OAAO,CAACgB,SAAR,CAAkB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,CAAU,OAAV,MAAuB,MAAjC;AAAA,KAAlB,CAAnB;AACAlB,IAAAA,OAAO,CAAC2B,QAAR,CAAiB;AACbC,MAAAA,KAAK,EAAE,cADM;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KAAjB;AAKAxB,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,OAAd,CAAD,CAAN,CAA+BC,OAA/B,CAAuC,cAAvC;AACAH,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,UAAd,CAAD,CAAN,CAAkCC,OAAlC,CAA0C,SAA1C;AAEAkB,IAAAA,UAAU,CAACD,QAAX,CAAoB,OAApB;AACApB,IAAAA,MAAM,CAACL,OAAO,CAACO,KAAR,CAAc,QAAd,CAAD,CAAN,CAAgCC,OAAhC,CAAwC;AACpC,eAAS;AAD2B,KAAxC;AAGH,GAfC,CAAF;AAgBH,CA/EO,CAAR","sourcesContent":["import React from 'react';\nimport { shallow } from 'enzyme';\nimport renderer from 'react-test-renderer';\nimport SignIn from '../../src/Component/Authentication/SignIn';\n\nconst wrapper = shallow(<SignIn/>)\n\n/**************************** SignIn Component Testing ******************************/\n\nit('SignIn Page renders correctly', () => {\n    renderer.create(<SignIn />);\n});\n\ndescribe('<SignIn/>', () => {\n    it('SignIn Page renders correctly', () => {\n        expect(shallow(<SignIn />)).toMatchSnapshot();\n    });\n\n    it('checking initial state', () => {\n        expect(wrapper.state('email')).toEqual('');\n        expect(wrapper.state('password')).toEqual('');\n    })\n\n    const emailInput = wrapper.find('OutlinedTextField').first();\n    const passInput = wrapper.find('OutlinedTextField').last();\n\n    it('testing state of component after onChangeText event occur', () => {\n\n        emailInput.props().onChangeText('andy@gmail.com');\n\n        passInput.props().onChangeText('Abc@1234');\n\n        expect(wrapper.state('email')).toEqual('andy@gmail.com');\n        expect(wrapper.state('password')).toEqual('Abc@1234');\n    })\n\n    it('props of OutlinedTextField', () => {\n        expect(emailInput.findWhere((node) => node.prop('label') === 'Email')).toExist();\n        expect(emailInput.findWhere((node) => node.prop('errorColor') === 'red')).toExist();\n    });\n\n    it('testing validateForm mathod for email validation', () => {\n\n        const instance = wrapper.instance()\n        expect(instance.validateForm()).toBe(true)\n\n        emailInput.props().onChangeText('andygmail.com');\n        expect(instance.validateForm()).toBe(false)\n\n        emailInput.props().onChangeText('andy@gmail.com');\n        expect(instance.validateForm()).toBe(true)\n\n    })\n\n    it('testing validateForm mathod for password validation', () => {\n\n        const instance = wrapper.instance()\n\n        passInput.props().onChangeText('');\n        expect(instance.validateForm()).toBe(false)\n\n        passInput.props().onChangeText('Abc@1234');\n        expect(instance.validateForm()).toBe(true)\n    })\n\n    it('testing visible password toggling', () => {\n        expect(wrapper.find('CheckBox').length).toBe(1);\n        expect(wrapper.state('visibleIcon')).toEqual(false)\n        const passIcon = wrapper.find('CheckBox')\n\n        passIcon.simulate('press');\n        expect(wrapper.state('visibleIcon')).toEqual(true)\n        passIcon.simulate('press');\n        expect(wrapper.state('visibleIcon')).toEqual(false)\n    })\n\n    it('testing Button', () => {\n        expect(wrapper.findWhere((node) => node.prop('title') === 'Create Account').length).toBe(1)\n        const nextButton = wrapper.findWhere((node) => node.prop('title') === 'Next')\n        wrapper.setState({\n            email: 'andgmail.com',\n            password: 'bc@1234'\n        })\n\n        expect(wrapper.state('email')).toEqual('andgmail.com');\n        expect(wrapper.state('password')).toEqual('bc@1234');\n\n        nextButton.simulate('press')\n        expect(wrapper.state('errors')).toEqual({\n            'email': '*Enter valid email-ID.'\n        })\n    })\n});"]}