a19834a9e188acd7f93f62c8032d45a8
var cov_1kpfzlbiov = function () {
  var path = "/home/admin10/Desktop/FundooNotes/src/Component/Login/SignUpPage3.js";
  var hash = "34f061a60f4a153f2cca9abd669a9e2c17b31168";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/admin10/Desktop/FundooNotes/src/Component/Login/SignUpPage3.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 21
        }
      },
      "1": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "2": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "3": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "4": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "5": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "6": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "7": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "8": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 74
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "10": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "11": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 32
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "13": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 40,
          column: 13
        }
      },
      "14": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "15": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 64
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "18": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 32
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 26
        }
      },
      "21": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "23": {
        start: {
          line: 58,
          column: 35
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "24": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "25": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 60
        }
      },
      "26": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "27": {
        start: {
          line: 108,
          column: 56
        },
        end: {
          line: 108,
          column: 83
        }
      },
      "28": {
        start: {
          line: 121,
          column: 59
        },
        end: {
          line: 121,
          column: 85
        }
      },
      "29": {
        start: {
          line: 128,
          column: 61
        },
        end: {
          line: 128,
          column: 116
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 20
          }
        },
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 24
          }
        },
        loc: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 56
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 17
          }
        },
        loc: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 65,
            column: 17
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 70
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 108,
            column: 42
          },
          end: {
            line: 108,
            column: 43
          }
        },
        loc: {
          start: {
            line: 108,
            column: 56
          },
          end: {
            line: 108,
            column: 83
          }
        },
        line: 108
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 121,
            column: 46
          },
          end: {
            line: 121,
            column: 47
          }
        },
        loc: {
          start: {
            line: 121,
            column: 59
          },
          end: {
            line: 121,
            column: 85
          }
        },
        line: 121
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 128,
            column: 55
          },
          end: {
            line: 128,
            column: 56
          }
        },
        loc: {
          start: {
            line: 128,
            column: 61
          },
          end: {
            line: 128,
            column: 116
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 138,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 40
          },
          end: {
            line: 134,
            column: 42
          }
        }, {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 138,
            column: 42
          }
        }],
        line: 130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "34f061a60f4a153f2cca9abd669a9e2c17b31168"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _LoginCss = require("../../Css/LoginCss");

var _reactNativeMaterialTextfield = require("react-native-material-textfield");

var _reactNativeElements = require("react-native-elements");

var _FirebaseLoginServices = require("../../Firebase/FirebaseLoginServices");

var SignUpPage2 = function (_Component) {
  (0, _inherits2.default)(SignUpPage2, _Component);

  function SignUpPage2(props) {
    var _this;

    (0, _classCallCheck2.default)(this, SignUpPage2);
    cov_1kpfzlbiov.f[0]++;
    cov_1kpfzlbiov.s[0]++;
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SignUpPage2).call(this, props));
    _this.validateForm = (cov_1kpfzlbiov.s[2]++, function () {
      cov_1kpfzlbiov.f[1]++;
      var errors = (cov_1kpfzlbiov.s[3]++, {});
      var formIsValid = (cov_1kpfzlbiov.s[4]++, true);
      cov_1kpfzlbiov.s[5]++;

      if (typeof _this.state.password !== "undefined") {
        cov_1kpfzlbiov.b[0][0]++;
        cov_1kpfzlbiov.s[6]++;

        if (!_this.state.password.match(/^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)) {
          cov_1kpfzlbiov.b[1][0]++;
          cov_1kpfzlbiov.s[7]++;
          formIsValid = false;
          cov_1kpfzlbiov.s[8]++;
          errors["password"] = "*Enter secure and strong password.";
        } else {
          cov_1kpfzlbiov.b[1][1]++;
        }
      } else {
        cov_1kpfzlbiov.b[0][1]++;
      }

      cov_1kpfzlbiov.s[9]++;

      if (!_this.state.password) {
        cov_1kpfzlbiov.b[2][0]++;
        cov_1kpfzlbiov.s[10]++;
        errors["password"] = "*Enter password";
        cov_1kpfzlbiov.s[11]++;
        formIsValid = false;
      } else {
        cov_1kpfzlbiov.b[2][1]++;
      }

      cov_1kpfzlbiov.s[12]++;

      if (typeof _this.state.confirm !== "undefined") {
        cov_1kpfzlbiov.b[3][0]++;
        cov_1kpfzlbiov.s[13]++;

        if (_this.state.confirm !== _this.state.password) {
          cov_1kpfzlbiov.b[4][0]++;
          cov_1kpfzlbiov.s[14]++;
          formIsValid = false;
          cov_1kpfzlbiov.s[15]++;
          errors["confirm"] = "*Password does not match.";
        } else {
          cov_1kpfzlbiov.b[4][1]++;
        }
      } else {
        cov_1kpfzlbiov.b[3][1]++;
      }

      cov_1kpfzlbiov.s[16]++;

      if (!_this.state.confirm) {
        cov_1kpfzlbiov.b[5][0]++;
        cov_1kpfzlbiov.s[17]++;
        errors["confirm"] = "*Enter password";
        cov_1kpfzlbiov.s[18]++;
        formIsValid = false;
      } else {
        cov_1kpfzlbiov.b[5][1]++;
      }

      cov_1kpfzlbiov.s[19]++;

      _this.setState({
        errors: errors
      });

      cov_1kpfzlbiov.s[20]++;
      return formIsValid;
    });
    _this.submitUserSignUp = (cov_1kpfzlbiov.s[21]++, function () {
      cov_1kpfzlbiov.f[2]++;
      cov_1kpfzlbiov.s[22]++;

      if (_this.validateForm()) {
        cov_1kpfzlbiov.b[6][0]++;

        var _ref = (cov_1kpfzlbiov.s[23]++, _this.props),
            navigation = _ref.navigation;

        cov_1kpfzlbiov.s[24]++;
        (0, _FirebaseLoginServices.registerUser)(navigation.getParam('firstName'), navigation.getParam('lastName'), navigation.getParam('email'), _this.state.password, function () {
          cov_1kpfzlbiov.f[3]++;
          cov_1kpfzlbiov.s[25]++;

          _this.props.navigation.navigate('SignIn');
        });
      } else {
        cov_1kpfzlbiov.b[6][1]++;
      }
    });
    cov_1kpfzlbiov.s[1]++;
    _this.state = {
      password: '',
      confirm: '',
      visibleIcon: false,
      errors: {}
    };
    return _this;
  }

  (0, _createClass2.default)(SignUpPage2, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      cov_1kpfzlbiov.f[4]++;
      cov_1kpfzlbiov.s[26]++;
      return _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.mainContainer
      }, _react.default.createElement(_reactNative.Text, {
        style: _LoginCss.styles.appTitle
      }, _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#4285F4'
        }
      }, "F"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#DB4437'
        }
      }, "u"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#F4B400'
        }
      }, "n"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#4285F4'
        }
      }, "d"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#0F9D58'
        }
      }, "o"), _react.default.createElement(_reactNative.Text, {
        style: {
          color: '#DB4437'
        }
      }, "o")), _react.default.createElement(_reactNative.Text, {
        style: _LoginCss.styles.createTitle
      }, "Create a strong password"), _react.default.createElement(_reactNative.Text, {
        style: {
          flex: 0,
          textAlign: 'center',
          fontSize: 15,
          marginLeft: '8%',
          marginRight: '8%',
          top: '7%'
        }
      }, "Create a strong password with a mix of letters, numbers and symbols"), _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.inputContainer
      }, _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.passView
      }, _react.default.createElement(_reactNativeMaterialTextfield.OutlinedTextField, {
        label: "Password",
        value: this.state.password,
        onChangeText: function onChangeText(password) {
          cov_1kpfzlbiov.f[5]++;
          cov_1kpfzlbiov.s[27]++;
          return _this2.setState({
            password: password
          });
        },
        secureTextEntry: !this.state.visibleIcon,
        error: this.state.errors.password,
        errorColor: "red"
      })), _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.passIconView
      }, _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.passView2
      }, _react.default.createElement(_reactNativeMaterialTextfield.OutlinedTextField, {
        label: "Confirm",
        value: this.state.confirm,
        onChangeText: function onChangeText(confirm) {
          cov_1kpfzlbiov.f[6]++;
          cov_1kpfzlbiov.s[28]++;
          return _this2.setState({
            confirm: confirm
          });
        },
        secureTextEntry: !this.state.visibleIcon,
        error: this.state.errors.confirm,
        errorColor: "red"
      })), _react.default.createElement(_reactNative.View, {
        style: {
          padding: '3%'
        }
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          cov_1kpfzlbiov.f[7]++;
          cov_1kpfzlbiov.s[29]++;
          return _this2.setState({
            visibleIcon: !_this2.state.visibleIcon
          });
        }
      }, !this.state.visibleIcon ? (cov_1kpfzlbiov.b[7][0]++, _react.default.createElement(_reactNative.Image, {
        style: _LoginCss.styles.passIcon,
        source: require('../../Assets/visible.png')
      })) : (cov_1kpfzlbiov.b[7][1]++, _react.default.createElement(_reactNative.Image, {
        style: _LoginCss.styles.passIcon,
        source: require('../../Assets/off.png')
      })))))), _react.default.createElement(_reactNative.View, {
        style: _LoginCss.styles.nextInSignUp
      }, _react.default.createElement(_reactNativeElements.Button, {
        title: "Next",
        onPress: this.submitUserSignUp
      })));
    }
  }]);
  return SignUpPage2;
}(_react.Component);

exports.default = SignUpPage2;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,