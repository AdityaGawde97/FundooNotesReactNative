{"version":3,"sources":["index.js"],"names":["Helper","props","error","focusAnimation","opacity","interpolate","inputRange","outputRange","extrapolate","state","errored","listener","addListener","onAnimation","bind","removeListener","value","animationValue","setState","style","title","disabled","baseColor","errorColor","text","textStyle","color","styles","PureComponent","propTypes","PropTypes","string","bool","Animated","Text","instanceOf","Value"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\n\nimport styles from './styles';\n\nexport default class Helper extends PureComponent {\n  static propTypes = {\n    title: PropTypes.string,\n    error: PropTypes.string,\n\n    disabled: PropTypes.bool,\n\n    style: Animated.Text.propTypes.style,\n\n    baseColor: PropTypes.string,\n    errorColor: PropTypes.string,\n\n    focusAnimation: PropTypes.instanceOf(Animated.Value),\n  };\n\n  constructor(props) {\n    super(props);\n\n    let { error, focusAnimation } = this.props;\n\n    let opacity = focusAnimation.interpolate({\n      inputRange: [-1, -0.5, 0],\n      outputRange: [1, 0, 1],\n      extrapolate: 'clamp',\n    });\n\n    this.state = {\n      errored: !!error,\n      opacity,\n    };\n  }\n\n  componentDidMount() {\n    let { focusAnimation } = this.props;\n\n    this.listener = focusAnimation\n      .addListener(this.onAnimation.bind(this));\n  }\n\n  componentWillUnmount() {\n    let { focusAnimation } = this.props;\n\n    focusAnimation.removeListener(this.listener);\n  }\n\n  onAnimation({ value }) {\n    if (this.animationValue > -0.5 && value <= -0.5) {\n      this.setState({ errored: true });\n    }\n\n    if (this.animationValue < -0.5 && value >= -0.5) {\n      this.setState({ errored: false });\n    }\n\n    this.animationValue = value;\n  }\n\n  render() {\n    let { errored, opacity } = this.state;\n    let {\n      style,\n      title,\n      error,\n      disabled,\n      baseColor,\n      errorColor,\n    } = this.props;\n\n    let text = errored?\n      error:\n      title;\n\n    if (null == text) {\n      return null;\n    }\n\n    let textStyle = {\n      opacity,\n\n      color: !disabled && errored?\n        errorColor:\n        baseColor,\n    };\n\n    return (\n      <Animated.Text style={[styles.text, style, textStyle]}>\n        {text}\n      </Animated.Text>\n    );\n  }\n}\n"]}