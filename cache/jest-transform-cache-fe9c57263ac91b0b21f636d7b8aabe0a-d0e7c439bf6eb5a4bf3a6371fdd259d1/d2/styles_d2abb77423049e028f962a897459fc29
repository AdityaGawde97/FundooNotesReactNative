6e3e518240f44f539952f7c4a9c7af99
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reactNative = require("react-native");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _default = _reactNative.StyleSheet.create({
  line: _objectSpread({
    position: 'absolute',
    bottom: 0
  }, _reactNative.Platform.select({
    android: {
      borderRadius: Number.EPSILON
    }
  })),
  container: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {
    overflow: 'hidden'
  })
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5qcyJdLCJuYW1lcyI6WyJTdHlsZVNoZWV0IiwiY3JlYXRlIiwibGluZSIsInBvc2l0aW9uIiwiYm90dG9tIiwiUGxhdGZvcm0iLCJzZWxlY3QiLCJhbmRyb2lkIiwiYm9yZGVyUmFkaXVzIiwiTnVtYmVyIiwiRVBTSUxPTiIsImNvbnRhaW5lciIsImFic29sdXRlRmlsbE9iamVjdCIsIm92ZXJmbG93Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7O2VBRWVBLHdCQUFXQyxNQUFYLENBQWtCO0FBQy9CQyxFQUFBQSxJQUFJO0FBQ0ZDLElBQUFBLFFBQVEsRUFBRSxVQURSO0FBRUZDLElBQUFBLE1BQU0sRUFBRTtBQUZOLEtBSUNDLHNCQUFTQyxNQUFULENBQWdCO0FBQ2pCQyxJQUFBQSxPQUFPLEVBQUU7QUFBRUMsTUFBQUEsWUFBWSxFQUFFQyxNQUFNLENBQUNDO0FBQXZCO0FBRFEsR0FBaEIsQ0FKRCxDQUQyQjtBQVUvQkMsRUFBQUEsU0FBUyxvQkFDSlgsd0JBQVdZLGtCQURQO0FBR1BDLElBQUFBLFFBQVEsRUFBRTtBQUhIO0FBVnNCLENBQWxCLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgbGluZToge1xuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIGJvdHRvbTogMCxcblxuICAgIC4uLlBsYXRmb3JtLnNlbGVjdCh7XG4gICAgICBhbmRyb2lkOiB7IGJvcmRlclJhZGl1czogTnVtYmVyLkVQU0lMT04gfSxcbiAgICB9KSxcbiAgfSxcblxuICBjb250YWluZXI6IHtcbiAgICAuLi5TdHlsZVNoZWV0LmFic29sdXRlRmlsbE9iamVjdCxcblxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgfSxcbn0pO1xuIl19